// 1. 1-100之间所有数的总和 与 平均值

// var sum=0;
// for(var i=1;i<=100;i++)
// {
//     sum+=i;
// }
// console.log("1-100之间的所有数的总和是"+sum);
// console.log("1-100之间的所有数的平均数"+sum/100);

// 2. 1-100之间所有偶数的和

// var sumtwo=0;
// for(var i=1;i<=100;i++)
// {
//     if(i%2==0){
//         sumtwo+=i;
//     }
// }
// console.log("1-100之间所有偶数的和"+sumtwo);

// 3. 100以内7的倍数的总和

// var sum77=0;
// for(var i=1;i<=100;i++)
// {
//     if(i%7==0){
//         sum77+=i;
//     }
// }
// console.log("100以内7的倍数的总和"+sum77);


// 4. 利用JavaScript完成如下九九乘法表

// var sum = '';
// for (var i = 1; i <=9; i++){
//     for (var j = 1; j <= i; j++ ){
//         sum += j + '×' + i + '=' + i*j +    '\t'
//     }
//   sum += '\n';
// }
// console.log(sum)

// 5. 用户输入一个数字，列出所有它能够整除的数字。

// var num=52;
// for(var i=0;i<num+1;i++){
//     if(num%i==0)
//     {
//         console.log(i);
        

//     }
// }
// 6. 利用JavaScript求：1+2+3+…+100的和
// var num=0;
// for(var i=1;i<=100;i++)
// {
//     num+=i;
// }
// console.log(num);

// 7. 利用JavaScript完成如下功能：要求在1~1000数字之中，找出所有能被5整除，或者被6整除的数字，并在控制台输出这些数字

// for(var i=1;i<=1000;i++)
// {
//     if(i%5==0 || i%6==0)
//     {
//         console.log("能被5整除或者被6整除的数字是"+i);
//     }
// }

// 8. 打印一个 5行4列的矩形

// var sum = ''
// for (var i = 1; i < 6; i++){
//     for (var j =1; j < 5; j++){
//         sum = sum + "*"  ;
//     }
//     sum += '\n';
// }
// console.log(sum)



// 9. 利用JavaScript完成输出如下图形（由“空格”和“*”这两种符号组成）（拔高题）
//         * 
//        * * 
//       * * * 
//      * * * * 
//     * * * * * 

// console.log(
//     `
//         * 
//        * * 
//       * * * 
//      * * * * 
//     * * * * * 
//     `
// );


// 10. 利用JavaScript，使用循环语句输出如下菱形图案（由“-”和“*”这两种符号组成） （拔高题）

//      ---*
//      --***
//      -*****
//      *******
//      -*****
//      --***
//      ---*

// 我想不出了用人工智能倒是可以


// 11.利用JavaScript完成输出如下图形（由“空格”和“*”这两种符号组成）
//      55555
//      4444
//      333
//      22
//      1
//      22
//      333
//      4444
//      55555

// 不会加+1

// 12.利用JavaScript完成输出如下图形（由“空格”和“*”这两种符号组成）
//      *                      *********
//      ***                   *******
//      *****                *****
//      *******             ***      
//      *********          *  



// console.log
// (
//     `
// *                *********
// ***              *******
// *****            *****
// *******          ***      
// *********        *  
// `);